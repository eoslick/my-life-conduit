package com.ses.mylifeconduit.corevalues.domain.vo;

import com.ses.mylifeconduit.core.ddd.ValueObject; // Assuming core DDD structure
import java.util.Objects;
import java.util.UUID;

/**
 * Represents the strongly-typed identifier for a Core Value
 * (either system-defined or user-custom).
 * Implements ValueObject marker interface.
 */
public final record CoreValueId(UUID value) implements ValueObject {

    /**
     * Creates a CoreValueId.
     * @param value The UUID value. Cannot be null.
     */
    public CoreValueId {
        Objects.requireNonNull(value, "CoreValueId value cannot be null");
    }

    /**
     * Generates a new random CoreValueId. Typically used for custom values.
     * @return A new CoreValueId.
     */
    public static CoreValueId generate() {
        return new CoreValueId(UUID.randomUUID());
    }

    /**
     * Creates a CoreValueId from a string representation.
     * @param uuidString The UUID string.
     * @return A CoreValueId.
     * @throws NullPointerException if uuidString is null.
     * @throws IllegalArgumentException if string is not a valid UUID.
     */
    public static CoreValueId fromString(String uuidString) {
        Objects.requireNonNull(uuidString, "UUID string cannot be null");
        return new CoreValueId(UUID.fromString(uuidString));
    }

    @Override
    public String toString() {
        return value.toString();
    }
    // equals() and hashCode() are automatically generated by the record
}